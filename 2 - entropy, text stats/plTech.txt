Wprowadzenie
Zanim przystąpimy do projektowania i kodowania naszych przykładów, musimy zrobić krok
wstecz i zdefiniować najważniejsze terminy. Warto się zastanowić, jaki jest cel naszych rozważań
i czym ten cel się różni od tego, co robiliśmy do tej pory. Czytelnicy, którzy budowali już jakieś
aplikacje internetowe, mogą pominąć kolejny rozdział, ponieważ prezentowany tam materiał
będzie obejmował wiedzę podstawową. Z drugiej strony, czytelnicy zainteresowani ogólnym
kontekstem naszych rozważań koniecznie powinni się zapoznać także ze wspomnianym rozdziałem
2.

Czym jest aplikacja internetowa?
Większość czytelników tej książki najprawdopodobniej doskonale zdaje sobie sprawę z tego,
czym jest aplikacja internetowa, co wcale nie oznacza, że próba precyzyjnego zdefiniowania
tego terminu jest bezcelowa, ponieważ etykieta aplikacji internetowej bardzo często jest przypisywana
różnym rozwiązaniom w sposób błędy. Aplikacja internetowa nie jest ani witryną
internetową, ani aplikacją w rozumieniu typowego użytkownika systemu operacyjnego.
Aplikacja internetowa plasuje się gdzieś pomiędzy tymi dwoma rozwiązaniami i me pewne
cechy zarówno witryny internetowej, jak i autonomicznej aplikacji.
O ile witryna internetowa zawiera strony z danymi, o tyle aplikacja internetowa składa się
zarówno z danych, jak i odrębnego mechanizmu ich dostarczania do przeglądarki. Podobnie
jak entuzjaści dużej dostępności witryn internetowych zachwycają się możliwością oddzielania
znaczników od stylów za pomocą plików CSS, również projektanci aplikacji internetowych
szczycą się możliwością faktycznego oddzielania danych od warstwy prezentacji — dane aplikacji
internetowej nie mają nic wspólnego ze znacznikami (choć same mogą tego rodzaju elementy
zawierać). Komunikaty składające się na komponent aplikacji internetowej są odseparowane
od znaczników. Oznacza to, że w razie konieczności wyświetlenia tych danych użytkownikowi
należy wyodrębnić odpowiednie komunikaty z miejsca ich składowania (najczęściej z bazy
danych), po czym dostarczyć użytkownikowi w określonym formacie i za pośrednictwem jakiegoś
medium (najczęściej w formacie HTML i za pośrednictwem protokołu HTTP). Najciekawsze
jest jednak to, że nie musimy dostarczać danych w formacie HTML — równie dobrze moglibyśmy
je wysyłać w pliku PDF za pośrednictwem np. poczty elektronicznej.
Aplikacje internetowe nie zawierają stron w rozumieniu znanym z witryn internetowych, które
z natury rzeczy składają się ze stron internetowych. O ile aplikacja internetowa może prezentować
swoje dane np. za pośrednictwem dziesięciu stron internetowych, dodawanie kolejnych danych
Po pierwsze, gdyby budynek był jak oprogramowanie, architekt musiałby się angażować w cały
proces jego budowy, od wylania fundamentów po założenie instalacji elektrycznych i sanitarnych.
Kiedy projektowanie i budowa domu dobiegnie końca, architekt musiałby przystąpić do
wykańczania i urządzania kilku pomieszczeń w oczekiwaniu na przybycie części przyszłych
mieszkańców, którzy zamieszkaliby w nowym domu przed jego ostatecznym wykończeniem.
Bezpośrednio przed zakończeniem budowy do budynku wprowadziłoby się mnóstwo innych
osób, które na własnej skórze sprawdzałyby, jak zastosowane rozwiązania sprawdzają się
w praktyce. Nowi mieszkańcy stawialiby jednak dodatkowe wymagania — chcieliby mieć do
dyspozycji większą liczbę sypialni, basen, piwnicę itd. Architekt musiałby niezwłocznie przystąpić
do projektowania nowych pomieszczeń i atrakcji, modyfikując swój oryginalny projekt. W czasie
realizacji nowych inwestycji wszyscy dotychczasowi mieszkańcy pozostawaliby jednak w przebudowywanym
domu. Ciągle korzystaliby z istniejących udogodnień, narzekając na hałas i pył
powodowane przez prace ekip budowlanych. Co więcej, wbrew wszelkiej logice do wciąż
rozbudowywanego budynku wprowadzaliby się kolejni mieszkańcy. Po zakończeniu wprowadzania
modyfikacji nowo przybyli mieszkańcy natychmiast zaczęliby zgłaszać następne wnioski
o rozbudowę domu o kolejne pomieszczenia i dodawanie dalszych atrakcji.
Kluczową cechą dobrego architekta aplikacji jest zdolność przewidywania tego rodzaju problemów
od samego początku. Gdyby architekt naszego hipotetycznego domu rozpoczął od budowy
wielkiego gmachu z bardzo skomplikowanymi instalacjami, w żaden sposób nie mógłby
sprostać dalszym żądaniom. W chwilę po zakończeniu budowy mieszkańcy wyprowadziliby
się w inne miejsce, gdzie mogliby uczestniczyć w przebudowie zamieszkiwanego domu zgodnie
ze swoimi potrzebami. Z utratą mieszkańców musielibyśmy się liczyć także wtedy, gdyby
rozbudowa naszego domu zajmowała zbyt wiele czasu. Musimy wiedzieć, jak rozpocząć prace
we właściwej skali, by w przyszłości można było w miarę bezproblemowo ten dom rozbudowywać.
Z powyższych rozważań w żadnym razie nie wynika, że architekt musi od samego początku
nie popełniać żadnych błędów w przyjmowanych założeniach. Skalowanie typowej aplikacji
polega między innymi na analizie i dostosowywaniu wszelkich aspektów pod kątem ich
ewentualnego dopasowania do nowych wymagań. Nie ma w tym nic złego — zadaniem architekta
aplikacji jest tylko minimalizowanie czasu potrzebnego do modyfikowania poszczególnych
komponentów oraz możliwie precyzyjne przygotowywanie projektu początkowego i projektów
niezbędnych zmian.

Od czego należy zacząć?
Aby przystąpić do projektowania i budowy pierwszej aplikacji internetowej wielkiej skali,
musimy dysponować czterema niezbędnymi elementami. Po pierwsze, będziemy potrzebowali
koncepcji. Z reguły jest to element najtrudniejszy, ponieważ nie ma wiele wspólnego z tradycyjnymi
działaniami, do których przywykła większość inżynierów.Techniki i technologie
prezentowane w tej książce można co prawda stosować podczas realizacji małych projektów,
jednakże w przypadku większych projektów wymagających zaangażowania wielu programistów
ich wykorzystywanie ma charakter opcjonalny.